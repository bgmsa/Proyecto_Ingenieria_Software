-- MySQL Script generated by MySQL Workbench
-- Tue Nov 14 10:52:38 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Carrera`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Carrera` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Carrera` (
  `codigo` INT NOT NULL,
  `facultad` VARCHAR(45) NULL,
  `nombre` VARCHAR(45) NULL,
  `numero_creditos` INT GENERATED ALWAYS AS (num_cred_opt+num_cred_tran+num_cred_obl) VIRTUAL,
  `num_cred_opt` INT NULL,
  `num_cred_tran` INT NULL,
  `num_cred_obl` INT NULL,
  PRIMARY KEY (`codigo`),
  UNIQUE INDEX `codigo_carrera_UNIQUE` (`codigo` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Asignatura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Asignatura` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Asignatura` (
  `codigo` INT NOT NULL,
  `creditos` INT NOT NULL,
  `tipo` ENUM('transversal', 'optativa', 'obligatoria') NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `carrera` INT NULL,
  PRIMARY KEY (`codigo`),
  UNIQUE INDEX `codigo_asignatura_UNIQUE` (`codigo` ASC),
  INDEX `fk_Asignatura_Carrera1_idx` (`carrera` ASC),
  CONSTRAINT `fk_Asignatura_Carrera1`
    FOREIGN KEY (`carrera`)
    REFERENCES `mydb`.`Carrera` (`codigo`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Alumno`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Alumno` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Alumno` (
  `num_expediente` INT NOT NULL,
  `id` INT NOT NULL,
  `carrera` INT NOT NULL,
  `NIF` INT NOT NULL COMMENT 'NIF se utiliza para poder iniciar la sesión, la tupla se identifica por ID.',
  `cc` VARCHAR(45) NOT NULL,
  `contraseña` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `tipo_user` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_1` VARCHAR(45) NOT NULL,
  `apellido_2` VARCHAR(45) NOT NULL,
  `banco` INT NOT NULL,
  `correo` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `num_expediente_UNIQUE` (`num_expediente` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_Alumno_Carrera1_idx` (`carrera` ASC),
  CONSTRAINT `fk_Alumno_Carrera1`
    FOREIGN KEY (`carrera`)
    REFERENCES `mydb`.`Carrera` (`codigo`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Departamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Departamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Departamento` (
  `nombre` INT NOT NULL,
  `codigo` INT NOT NULL,
  `carga` INT NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Categoria` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Categoria` (
  `horas_semanales` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Profesor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Profesor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Profesor` (
  `antiguedad` INT NULL,
  `num_tramos_investigacion` INT NULL,
  `num_tramos_docentes` INT NULL,
  `id` INT NOT NULL,
  `departamento` INT NULL,
  `NIF` INT NOT NULL COMMENT 'NIF se utiliza para poder iniciar la sesión, la tupla se identifica por ID.',
  `cuenta` VARCHAR(45) NOT NULL,
  `contraseña` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `tipo_user` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_1` VARCHAR(45) NOT NULL,
  `apellido_2` VARCHAR(45) NOT NULL,
  `banco` INT NOT NULL,
  `correo` VARCHAR(45) NOT NULL,
  `categoria` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `categoria`),
  INDEX `fk_Profesor_Departamento1_idx` (`departamento` ASC),
  INDEX `fk_Profesor_Categoria1_idx` (`categoria` ASC),
  CONSTRAINT `fk_Profesor_Departamento1`
    FOREIGN KEY (`departamento`)
    REFERENCES `mydb`.`Departamento` (`codigo`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Profesor_Categoria1`
    FOREIGN KEY (`categoria`)
    REFERENCES `mydb`.`Categoria` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Administrador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Administrador` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Administrador` (
  `id` INT NOT NULL,
  `NIF` INT NOT NULL COMMENT 'NIF se utiliza para poder iniciar la sesión, la tupla se identifica por ID.',
  `cuenta` VARCHAR(45) NOT NULL,
  `contraseña` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `tipo_user` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_1` VARCHAR(45) NOT NULL,
  `apellido_2` VARCHAR(45) NOT NULL,
  `banco` INT NOT NULL,
  `correo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Nomina`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Nomina` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Nomina` (
  `numero` INT NOT NULL,
  `fecha` DATE NULL,
  `importe` DOUBLE NULL,
  `profesor` INT NOT NULL,
  PRIMARY KEY (`numero`, `profesor`),
  INDEX `fk_Nomina_Profesor1_idx` (`profesor` ASC),
  CONSTRAINT `fk_Nomina_Profesor1`
    FOREIGN KEY (`profesor`)
    REFERENCES `mydb`.`Profesor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Matricula`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Matricula` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Matricula` (
  `promocion` INT NOT NULL,
  `reservado` TINYINT(1) NOT NULL,
  `alumno` INT NOT NULL,
  PRIMARY KEY (`promocion`, `alumno`),
  INDEX `fk_Matricula_Alumno1_idx` (`alumno` ASC),
  CONSTRAINT `fk_Matricula_Alumno1`
    FOREIGN KEY (`alumno`)
    REFERENCES `mydb`.`Alumno` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pago` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pago` (
  `importe` DOUBLE NOT NULL,
  `numero_pago` INT NOT NULL,
  `pagado` TINYINT(1) NOT NULL,
  `promocion` INT NOT NULL,
  `alumno` INT NOT NULL,
  PRIMARY KEY (`numero_pago`),
  UNIQUE INDEX `numero_pago_UNIQUE` (`numero_pago` ASC),
  INDEX `fk_Pago_Matricula1_idx` (`promocion` ASC, `alumno` ASC),
  CONSTRAINT `fk_Pago_Matricula1`
    FOREIGN KEY (`promocion` , `alumno`)
    REFERENCES `mydb`.`Matricula` (`promocion` , `alumno`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Grupo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Grupo` (
  `asignatura` INT NOT NULL,
  `id` INT NOT NULL,
  `actas` TINYINT(1) NULL,
  INDEX `fk_Grupo_Asignatura1_idx` (`asignatura` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Grupo_Asignatura1`
    FOREIGN KEY (`asignatura`)
    REFERENCES `mydb`.`Asignatura` (`codigo`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Espacio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Espacio` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Espacio` (
  `codigo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `aforo_max` INT NULL,
  `precio_alquiler` DOUBLE NULL,
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ReservaProfesor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ReservaProfesor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`ReservaProfesor` (
  `fecha` DATE NOT NULL,
  `hora_entrada` INT NOT NULL,
  `espacio` INT NOT NULL,
  `importe` INT NOT NULL,
  `profesor` INT NOT NULL,
  `hora_salida` INT NOT NULL,
  PRIMARY KEY (`fecha`, `hora_entrada`, `espacio`),
  INDEX `fk_ReservaProfesores_Espacio1_idx` (`espacio` ASC),
  INDEX `fk_ReservaProfesores_Profesor1_idx` (`profesor` ASC),
  CONSTRAINT `fk_ReservaProfesores_Espacio1`
    FOREIGN KEY (`espacio`)
    REFERENCES `mydb`.`Espacio` (`codigo`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ReservaProfesores_Profesor1`
    FOREIGN KEY (`profesor`)
    REFERENCES `mydb`.`Profesor` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ReservaGrupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ReservaGrupo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`ReservaGrupo` (
  `hora_entrada` INT NOT NULL,
  `hora_salida` INT NOT NULL,
  `dia_semana` INT NOT NULL,
  `espacio` INT NOT NULL,
  `grupo` INT NOT NULL,
  PRIMARY KEY (`hora_entrada`, `dia_semana`, `espacio`),
  INDEX `fk_ReservaGrupo_Espacio1_idx` (`espacio` ASC),
  INDEX `fk_ReservaGrupo_Grupo1_idx` (`grupo` ASC),
  CONSTRAINT `fk_ReservaGrupo_Espacio1`
    FOREIGN KEY (`espacio`)
    REFERENCES `mydb`.`Espacio` (`codigo`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ReservaGrupo_Grupo1`
    FOREIGN KEY (`grupo`)
    REFERENCES `mydb`.`Grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Matricula_Grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Matricula_Grupo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Matricula_Grupo` (
  `Mpromocion` INT NOT NULL,
  `alumno` INT NOT NULL,
  `grupo` INT NOT NULL,
  `nota` INT NULL,
  PRIMARY KEY (`Mpromocion`, `alumno`, `grupo`),
  INDEX `fk_Matricula_has_Grupo_Grupo1_idx` (`grupo` ASC),
  INDEX `fk_Matricula_has_Grupo_Matricula1_idx` (`Mpromocion` ASC, `alumno` ASC),
  CONSTRAINT `fk_Matricula_has_Grupo_Matricula1`
    FOREIGN KEY (`Mpromocion` , `alumno`)
    REFERENCES `mydb`.`Matricula` (`promocion` , `alumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Matricula_has_Grupo_Grupo1`
    FOREIGN KEY (`grupo`)
    REFERENCES `mydb`.`Grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Profesor_Grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Profesor_Grupo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Profesor_Grupo` (
  `profesor` INT NOT NULL,
  `grupo` INT NOT NULL,
  PRIMARY KEY (`profesor`, `grupo`),
  INDEX `fk_Profesor_has_Grupo_Grupo1_idx` (`grupo` ASC),
  INDEX `fk_Profesor_has_Grupo_Profesor1_idx` (`profesor` ASC),
  CONSTRAINT `fk_Profesor_has_Grupo_Profesor1`
    FOREIGN KEY (`profesor`)
    REFERENCES `mydb`.`Profesor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profesor_has_Grupo_Grupo1`
    FOREIGN KEY (`grupo`)
    REFERENCES `mydb`.`Grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`Reservas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Reservas` (`espacio` INT, `hora_entrada` INT, `hora_salida` INT, `dia_semana` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`CargaDocente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`CargaDocente` (`id` INT);

-- -----------------------------------------------------
-- View `mydb`.`Reservas`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`Reservas` ;
DROP TABLE IF EXISTS `mydb`.`Reservas`;
USE `mydb`;
CREATE  OR REPLACE VIEW `Reservas` AS select espacio, hora_entrada, hora_salida, dia_semana 
							from ReservaGrupo
							union (select espacio, hora_entrada, hora_salida, DAYOFWEEK(fecha) as dia_semana from ReservaProfesor);

-- -----------------------------------------------------
-- View `mydb`.`CargaDocente`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`CargaDocente` ;
DROP TABLE IF EXISTS `mydb`.`CargaDocente`;
USE `mydb`;
CREATE  OR REPLACE VIEW `CargaDocente` AS (select nombre as nombre_departamento, carga_docente 
								from Departamento 
                                join (select departamento, id, (select COUNT(*)*2 from Profesor_Grupo where profesor = id) as carga_docente from Profesor group by departamento) as profesores
                                on codigo = departamento);
SET SQL_MODE = '';
GRANT USAGE ON *.* TO Admin;
 DROP USER Admin;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'Admin';

GRANT ALL ON `mydb`.* TO 'Admin';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
